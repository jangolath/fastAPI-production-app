services:
  app:
    build: .
    container_name: fastapi-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:mypassword123@db:5432/myapp
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
      - LOG_LEVEL=INFO
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:17
    container_name: postgres-db
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypassword123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d myapp"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-web
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
      # Optional customizations:
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=True
      - PGADMIN_CONFIG_LOGIN_BANNER="FastAPI Development Database"
      - PGADMIN_CONFIG_CONSOLE_LOG_LEVEL=10
      # Pre-configure server connection (advanced)
      - PGADMIN_CONFIG_WTF_CSRF_TIME_LIMIT=None
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgladmin
      # Optional: Mount a servers.json for pre-configured connections
      # - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data: